package MyEmail;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMessage.RecipientType;

public class myEmail {
	public static void main(String[] args) throws MessagingException, IOException {
		Properties proper = new Properties();
		Session session = Session.getInstance(proper);
		MimeMessage message = new MimeMessage(session);		//创建邮件对象
		// 2. From: 发件人
        //    其中 InternetAddress 的三个参数分别为: 邮箱, 显示的昵称(只用于显示, 没有特别的要求), 昵称的字符集编码
		message.setFrom(new InternetAddress("1278349695@qq.com","dj","UTF-8"));
		
		message.setRecipient(MimeMessage.RecipientType.TO, new InternetAddress("1278349695@qq.com","dj","UTF-8"));
		message.setSubject("邮件主题", "UTF-8");
		message.setContent("TEST这是邮件正文。。。", "text/html;charset=UTF-8");
		message.setSentDate(new Date());
		message.saveChanges();
		
		OutputStream os = new FileOutputStream("myEmail.eml");
		message.writeTo(os);
		os.flush();
		os.close();
		
		}
	
	private void mail_QQ() throws MessagingException{
		 // 配置发送邮件的环境属性
        final Properties props = new Properties();
        /*
         * 可用的属性： mail.store.protocol / mail.transport.protocol / mail.host /
         * mail.user / mail.from
         */
        // 表示SMTP发送邮件，需要进行身份验证
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.host", "smtp.qq.com");
        props.put("mail.transport.protocol", "smtp");
        props.put("mail.debug", "true");	//遇到最多的坑就是下面这行，不加要报“A secure connection is requiered”错。
        props.put("mail.smtp.starttls.enable", "true");
        // 发件人的账号
        props.put("mail.user", "1278349695@qq.com");
        // 访问SMTP服务时需要提供的密码
        props.put("mail.password", "ukjzpxnwwzoggedd");		//ukjzpxnwwzoggedd
 
        // 构建授权信息，用于进行SMTP进行身份验证
        Authenticator authenticator = new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                // 用户名、密码
                String userName = props.getProperty("mail.user");
                String password = props.getProperty("mail.password");
                return new PasswordAuthentication(userName, password);
            }
        };
        // 使用环境属性和授权信息，创建邮件会话
        Session mailSession = Session.getInstance(props, authenticator);
        MimeMessage message = createMessage(mailSession, props);
 
        // 发送邮件
        Transport.send(message);
	}
	
	private void mail_163(String strMail, String strTitle, String strText) throws MessagingException{
		final Properties props = new Properties();  
        props.put("mail.smtp.auth", "true");  
        props.put("mail.smtp.host", "smtp.163.com");  

        // 发件人的账号  
        props.put("mail.user", "dj_jxc@163.com");  
        //发件人的密码  
        props.put("mail.password", "123xc321"); 
    	  // 构建授权信息，用于进行SMTP进行身份验证  
        Authenticator authenticator = new Authenticator() {  
            @Override  
            protected PasswordAuthentication getPasswordAuthentication() {  
                // 用户名、密码  
                String userName = props.getProperty("mail.user");  
                String password = props.getProperty("mail.password");  
                return new PasswordAuthentication(userName, password);  
            }  
        };  
        // 使用环境属性和授权信息，创建邮件会话  
        Session mailSession = Session.getInstance(props, authenticator);  
        // 创建邮件消息  
        MimeMessage message = new MimeMessage(mailSession);  
        // 设置发件人  
        String username = props.getProperty("mail.user");  
        InternetAddress form = new InternetAddress(username);  
        message.setFrom(form);  

        // 设置收件人  
        InternetAddress to = new InternetAddress(strMail);   
        message.setRecipient(RecipientType.TO, to);  

        // 设置邮件标题  
        message.setSubject(strTitle);  

        // 设置邮件的内容体  
        message.setContent(strText, "text/html;charset=UTF-8");  
        // 发送邮件  
        Transport.send(message);  
	} 
	
	private MimeMessage createMessage(Session mailSession, Properties props) throws MessagingException{
		  // 创建邮件消息
        MimeMessage message = new MimeMessage(mailSession);
        // 设置发件人
        InternetAddress form = new InternetAddress(
                props.getProperty("mail.user"));
        message.setFrom(form);
 
        // 设置收件人
        InternetAddress to = new InternetAddress("2276771363@qq.com");
        message.setRecipient(RecipientType.TO, to);
 
        // 设置邮件标题
        message.setSubject("JAVA测试邮件");
 
        // 设置邮件的内容体
        message.setContent("<a href='http://www.XXX.org'>测试的邮件</a>", "text/html;charset=UTF-8");
        return message;
	}

}
